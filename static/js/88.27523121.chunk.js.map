{"version":3,"file":"static/js/88.27523121.chunk.js","mappings":"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","sources":["api/constants.ts","utils/helpers.ts","api/queryService.ts","api/api.ts","pages/TodoList/TodoLis.actions.ts","api/todo/todo.ts","pages/TodoList/TodoList.reducer.ts","assets/svg/delete.svg","pages/TodoList/TodoList.context.tsx","components/AddTodo/AddTodo.styles.ts","components/AddTodo/AddTodo.tsx","components/BulkActionRow/BulkActionRow.style.ts","components/BulkActionRow/BulkActionRow.tsx","components/Item/Item.styles.ts","components/Item/Item.tsx","theme/breakpoints.ts","theme/index.ts","pages/TodoList/TodoList.style.ts","pages/TodoList/TodoList.tsx","pages/TodoList/TodoList.container.tsx"],"sourcesContent":["export const BASE_API_ENDPOINT = 'https://dummyjson.com/';\n\nexport const APIRoutes = {\n  todo: {\n    create: 'todos/add',\n    retrieve: 'todos',\n    update: 'todos/:todoId',\n    delete: 'todos/:todoId'\n  }\n}","\nfunction omit(obj: any, keys: any) {\n  const ret: any = {};\n  keys = new Set(keys);\n\n  const keysToCopy = Object.keys(obj).filter(key => !keys.has(key));\n  for (const key of keysToCopy) {\n    ret[key] = obj[key];\n  }\n  return ret;\n}\n\n/**\n* isNull checks that passed value is empty, undefined or null\n* @param {any} value\n* @returns {boolean}\n*/\nexport const isNull = (value: any) => {\n  return value === '' ||\n    value === undefined ||\n    value === null ||\n    (Array.isArray(value) && value.length === 0) ||\n    (typeof value === 'object' && Object.keys(value).length === 0);\n}\n\n/**\n * create reducer for userReducer hook with object type procedural calls instead of switch cases\n * @param {IState} state state.\n * @param {IActions} actions actions to be called.\n * @param {IActionMap} actions actions to be called.\n */\n\nexport const createReducer = <IActionMap, IState, IActions extends object>(actionMap: IActionMap) => (state: IState, actions: IActions): any => {\n\n  const key = Object.keys(actions)?.[0] ?? null;\n  if (!key) {\n    return state;\n  }\n\n  const payload = actions[key as keyof IActions];\n  const handler = actionMap[key as keyof IActionMap] as Function;\n  const updatedState = handler ? handler(state, payload) : state;\n  const updatedActions = omit(actions as object, [key]);\n\n  return createReducer(actionMap)(updatedState, updatedActions);\n};\n\n/**\n * to inject variables in url\n * @param {string} url state.\n * @param {object} data actions to be called.\n */\n\nexport function injectQueryParamsUrl(url: string, data: any) {\n  if (!url || !data) {\n    return url;\n  }\n\n  Object.keys(data).forEach((key) => {\n    if (url.includes(`:${key}`)) {\n      url = url.replace(`:${key}`, data[key])\n    }\n  })\n\n  return url;\n}\n\n/**\n * set url parameters\n * @param {string} url state.\n * @param {object} urlParams actions to be called.\n */\nexport const appendUrlSearchParams = (url: string, params: any): string => {\n  if (isNull(url) || isNull(params)) {\n    return url;\n  }\n\n  const urlParams = new URLSearchParams('');\n  Object.keys(params).forEach((key) => {\n    urlParams.set(key, params[key]);\n  });\n  url = `${url}?${urlParams.toString()}`;\n\n  return url;\n};","import { useQuery, UseQueryOptions, QueryKey, useQueryClient, useMutation } from '@tanstack/react-query';\nimport { appendUrlSearchParams, injectQueryParamsUrl } from '../utils/helpers';\nimport { api } from './api';\n\n\nexport interface IOptions {\n  responseParser?(response: any): any;\n}\n\nconst prepareUrl = (url: string, data: any, params: object): string =>\n  appendUrlSearchParams(injectQueryParamsUrl(url, data), { ...params, ...data?.urlParams });\n\nexport enum APIMethod {\n  GET = 'GET',\n  POST = 'POST',\n  PUT = 'PUT',\n  DELETE = 'DELETE'\n}\n\ntype UrlParams = {\n  urlParams?: object\n}\n\nexport type Payload<P> = UrlParams & P;\n\n/**\n*  To fetch results using useQuery and get API call method\n* @param url api endpoint.\n* @param params url params.\n* @param config useQuery options.\n* @template R Response type.\n* @returns useQuery result\n*/\nexport const useFetch = <R>(\n  url: string,\n  params: object,\n  options?: IOptions,\n  config?: UseQueryOptions<R, Error, R, QueryKey>,\n\n) => useQuery({\n  queryKey: [APIMethod.GET, appendUrlSearchParams(url, params)],\n  queryFn: () => api\n    .get<R>(url as string, { params })\n    .then((res) => res.data)\n    .then((r) => options?.responseParser ? options.responseParser(r) : r),\n  enabled: !!url && config?.enabled,\n  ...config\n});\n\nconst useGenericMutation = <P extends UrlParams, R>(\n  func: (data: P) => Promise<R>,\n  url: string,\n  method: APIMethod,\n  params?: object,\n) => {\n  const queryClient = useQueryClient();\n\n  return useMutation(func, {\n    onSuccess: (data, payload) => {\n      const { urlParams } = payload;\n      queryClient.setQueryData([method, prepareUrl(url!, payload, { ...params, ...urlParams })], data);\n    },\n    onError: (err) => {\n      console.error(err);\n    }\n  })\n}\n\n/**\n*  use to call get api wih params\n* @param url api endpoint.\n* @param params url params.\n* @template R Response type.\n* @returns useMutation result\n*/\nexport const useFetchMutation = <P extends UrlParams, R>(\n  url: string,\n  options?: IOptions,\n  params?: object\n) => {\n\n  return useGenericMutation<P, R>(\n    (data) => {\n      const { urlParams } = data;\n\n      return api.get<R>(url, { params: { ...params, ...urlParams } })\n        .then((r) => r.data)\n        .then((r) => options?.responseParser ? options.responseParser(r) : r);\n    },\n    url,\n    APIMethod.GET,\n    params,\n  );\n};\n/**\n*  To delete result using useMutation and delete API call method\n* @param url api endpoint.\n* @param params url params.\n* @template R Response type.\n* @returns useMutation result\n*/\nexport const useDelete = <R>(\n  url: string,\n  options?: IOptions,\n  params?: object\n) => {\n  return useGenericMutation<any, R>(\n    (data) => {\n      const { urlParams } = data;\n\n      return api.delete<R>(url, { params: { ...params, ...urlParams } })\n        .then((r) => r.data)\n        .then((r) => options?.responseParser ? options.responseParser(r) : r);\n    },\n    url,\n    APIMethod.DELETE,\n    params,\n  );\n};\n\n/**\n* To post result using useMutation and post API call method\n* @param url api endpoint.\n* @param params url params.\n* @template R Response type.\n* @template P Payload type.\n* @returns useMutation result\n*/\nexport const usePost = <P extends UrlParams, R>(\n  url: string,\n  options?: IOptions,\n  params?: object\n) => {\n  return useGenericMutation<P, R>(\n    (data) => {\n      const { urlParams } = data;\n\n      return api.post<P, R>(url, data, { params: { ...params, ...urlParams, } })\n        .then((r) => r.data)\n        .then((r) => options?.responseParser ? options.responseParser(r) : r);\n    },\n    url,\n    APIMethod.POST,\n    params,\n  );\n};\n\n/**\n* To post result using useQuery and post API call method\n* @param url api endpoint.\n* @param params url params.\n* @param config useQuery options.\n* @template R Response type.\n* @template P Payload type.\n* @returns useQuery result\n*/\nexport const usePostQuery = <P, R>(\n  url: string,\n  params: object,\n  options?: IOptions,\n  config?: UseQueryOptions<unknown, Error, R, QueryKey>\n) => useQuery({\n  queryKey: [APIMethod.POST, appendUrlSearchParams(url, params)],\n  queryFn: (data) => api.post<P, R>(url, data as P, { params })\n    .then((r) => r.data)\n    .then((r) => options?.responseParser ? options.responseParser(r) : r),\n  enabled: !!url && config?.enabled,\n  ...config\n})\n\n/**\n* To update result using useMutation and put API call method\n* @param url api endpoint.\n* @param params url params.\n* @template R Response type.\n* @template P Payload type.\n* @returns useMutation result\n*/\nexport const useUpdate = <P extends UrlParams, R>(\n  url: string,\n  options?: IOptions,\n  params?: object\n) => {\n  return useGenericMutation<P, R>(\n    (data) => {\n      const { urlParams } = data;\n\n      return api.put<P, R>(url, data, { params: { ...params, ...urlParams } })\n        .then((r) => r.data)\n        .then((r) => options?.responseParser ? options.responseParser(r) : r)\n    },\n    url,\n    APIMethod.PUT,\n    params,\n  );\n};","import axios from 'axios';\nimport { BASE_API_ENDPOINT } from './constants';\n\nexport const api = {\n  get: <R>(url: string, params?: object) =>\n    axios.get<R>(new URL(url, BASE_API_ENDPOINT).href, {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      ...params,\n    }),\n  post: <P, R>(url: string, data: P, params?: object) =>\n    axios.post<R>(new URL(url, BASE_API_ENDPOINT).href, data, {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      ...params\n    }),\n  put: <P, R>(url: string, data: P, params?: object) =>\n    axios.put<R>(new URL(url, BASE_API_ENDPOINT).href, data, {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      ...params\n    }),\n  delete: <R>(url: string, params?: object) =>\n    axios.delete<R>(new URL(url, BASE_API_ENDPOINT).href, {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      ...params\n    }),\n};\n","import { IState } from \"./TodoList.reducer\";\n\nexport enum TodoActionsTypes {\n  setToast = 'setToast',\n  setSelectedTodos = 'setSelectedTodos',\n}\n\nexport interface IToast {\n  open?: boolean;\n  message?: string;\n  type?: 'success' | 'error'\n}\n\nexport interface IActions {\n  [TodoActionsTypes.setToast]?: IState['toast'];\n  [TodoActionsTypes.setSelectedTodos]?: IState['selectedTodos'];\n}\n\n","import { APIRoutes } from \"../constants\";\nimport { Payload, useDelete, useFetch, usePost, useUpdate } from \"../queryService\";\n\nexport interface ITodo {\n  id?: number;\n  todo?: string;\n  completed?: boolean;\n  userId?: number;\n}\ninterface ITodoResponse {\n  todos: ITodo[]\n}\n\nexport const useCreateTodo = () =>\n  usePost<Payload<ITodo>, ITodo>(APIRoutes.todo.create, {});\n\nexport const useFetchTodo = () =>\n  useFetch<ITodoResponse>(APIRoutes.todo.retrieve, {});\n\nexport const useDeleteTodo = () =>\n  useDelete(APIRoutes.todo.delete, {});\n\nexport const useUpdateTodo = () =>\n  useUpdate(APIRoutes.todo.update, {});","import { createReducer } from '../../utils/helpers';\nimport { IActions, IToast, TodoActionsTypes } from './TodoLis.actions';\n\nexport interface IState {\n  toast: IToast;\n  selectedTodos: number[];\n}\n\nexport const initialState: IState = {\n  toast: {\n    open: false,\n    message: '',\n    type: 'success'\n  },\n  selectedTodos: []\n};\n\ntype IActionMap = Record<TodoActionsTypes, (state: IState, payload: any) => IState>\n\nconst actionMap: IActionMap = {\n  [TodoActionsTypes.setToast]: (state: IState, payload: any): IState => ({ ...state, toast: payload }),\n  [TodoActionsTypes.setSelectedTodos]: (state: IState, payload: any): IState => ({ ...state, selectedTodos: payload }),\n};\n\nexport default createReducer<IActionMap, IState, IActions>(actionMap);\n","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgDelete(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    height: 24,\n    viewBox: \"0 96 960 960\",\n    width: 24,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M261 936q-24.75 0-42.375-17.625T201 876V306h-41v-60h188v-30h264v30h188v60h-41v570q0 24-18 42t-42 18H261Zm438-630H261v570h438V306ZM367 790h60V391h-60v399Zm166 0h60V391h-60v399ZM261 306v570-570Z\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDelete);\nexport default __webpack_public_path__ + \"static/media/delete.72fd34269ef2218be0579751d2ae76e9.svg\";\nexport { ForwardRef as ReactComponent };","import React, { Dispatch } from 'react';\nimport { createContext, useContext, useContextSelector } from 'use-context-selector';\nimport { IActions } from './TodoLis.actions';\nimport reducer, { initialState, IState } from './TodoList.reducer';\n\nexport const TodoContext = createContext<IState>(initialState);\nexport const TodoDispatchContext = createContext<Dispatch<IActions>>(() => null);\n\nexport const useTodoDispatch = () => useContext(TodoDispatchContext);\nexport const useTodoState = () => useContext(TodoContext);\nexport const useTodoContextSelector = <K extends keyof IState>(selector: (state: IState) => IState[K]) => useContextSelector<IState, IState[K]>(TodoContext, selector);\n\ninterface ISalesProcessingStateProvider {\n  children: React.ReactNode\n}\n\nconst TodoStateProvider = ({ children }: ISalesProcessingStateProvider) => {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  return (\n    <TodoContext.Provider value={state}>\n      <TodoDispatchContext.Provider value={dispatch}>\n        {children}\n      </TodoDispatchContext.Provider>\n    </TodoContext.Provider>\n  );\n};\n\nexport default TodoStateProvider;","import styled from \"@emotion/styled\";\nimport { Card, OutlinedInput } from \"@mui/material\";\n\nexport const CardStyled = styled(Card)`\n  display: flex;\n  padding: 1rem;\n  margin: 1rem;\n  `\n\nexport const InputStyled = styled(OutlinedInput)`\n  flex: 1;\n`","import { Button } from '@mui/material';\nimport React, { useState } from 'react';\nimport { useCreateTodo } from '../../api/todo/todo';\nimport { useTodoDispatch } from '../../pages/TodoList/TodoList.context';\nimport { CardStyled, InputStyled } from './AddTodo.styles';\n\nconst AddTodo = () => {\n  const inputRef = React.useRef<HTMLInputElement>();\n\n  const [text, setText] = useState<string>('');\n  const createTodo = useCreateTodo();\n  const todoDispatch = useTodoDispatch();\n\n  const handleOnAdd = React.useCallback(\n    () => {\n      createTodo.mutateAsync({\n        todo: text,\n        userId: 5\n      })\n        .then(() => {\n          todoDispatch({\n            setToast: {\n              open: true,\n              type: 'success',\n              message: 'Todo added successfully'\n            }\n          });\n\n          if (inputRef.current) {\n            inputRef.current.value = '';\n          }\n\n        }).catch((err) =>\n          todoDispatch({\n            setToast: {\n              open: true,\n              type: 'error',\n              message: 'Failed to add'\n            }\n          }));\n    },\n    [text, createTodo, todoDispatch]\n  );\n\n  return (\n    <CardStyled>\n      <InputStyled inputRef={inputRef} placeholder=\"Enter todo item...\" inputProps={{ 'aria-label': 'todo' }} onChange={(e) => setText(e.target.value)} />\n      <Button color=\"secondary\" aria-label=\"add an alarm\" onClick={() => handleOnAdd()}>\n        Add\n      </Button>\n    </CardStyled>\n  );\n};\n\nexport default AddTodo;","import styled from \"@emotion/styled\";\n\nexport const BulkActionRowContainer = styled.div`\n  justify-content: space-between; \n  font-size: 0.8em;\n  display: flex;\n  margin: 0 1rem;\n  align-items: center;\n`\n\nexport const RowText = styled.p`\n  margin: 0;\n  padding-left: 0.5rem;\n`","import React from 'react';\nimport { IconButton } from '@mui/material';\nimport { ReactComponent as DeleteSvg } from '../../assets/svg/delete.svg';\nimport { BulkActionRowContainer, RowText } from './BulkActionRow.style';\nimport { IBulkActionRowProperties } from './BulkActionRow.properties';\nimport { useQueryClient } from '@tanstack/react-query';\nimport { APIMethod } from '../../api/queryService';\nimport { ITodo } from '../../api/todo/todo';\nimport { useTodoDispatch } from '../../pages/TodoList/TodoList.context';\n\nconst BulkActionRow = (props: IBulkActionRowProperties) => {\n  const { selectedTodos } = props;\n\n  const todoDispatch = useTodoDispatch();\n\n  const queryClient = useQueryClient();\n\n  const handleBluckDelete = React.useCallback(() => {\n    queryClient.setQueryData([APIMethod.GET, 'todos'], (old: any) => {\n      const updatedTodos = old?.todos?.filter((t: ITodo) => !selectedTodos.some((ct) => Number(ct) === t.id));\n\n      return {\n        ...old,\n        todos: updatedTodos\n      };\n    });\n    todoDispatch({ setSelectedTodos: [] });\n  }, [todoDispatch, queryClient, selectedTodos]);\n\n  return selectedTodos?.length > 0 ? (\n    <BulkActionRowContainer>\n      <RowText><b>{selectedTodos?.length}</b> row selected</RowText>\n      <IconButton onClick={handleBluckDelete}>\n        <DeleteSvg />\n      </IconButton>\n    </BulkActionRowContainer>\n  ) : null;\n};\n\nexport default BulkActionRow;","import styled from \"@emotion/styled\";\nimport { ButtonGroup, Card } from \"@mui/material\";\n\nexport const CardStyled = styled(Card)`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 1rem;\n  padding: 1rem;\n`\n\nexport const Actions = styled(ButtonGroup)`\n  display: flex;\n`","import React from 'react';\nimport { Checkbox, IconButton, Typography } from '@mui/material';\nimport { Actions, CardStyled } from './Item.styles';\nimport { IItemProps } from './Item.types';\nimport { ReactComponent as DeleteSvg } from '../../assets/svg/delete.svg';\nimport { useQueryClient } from '@tanstack/react-query';\nimport { APIMethod } from '../../api/queryService';\nimport { ITodo } from '../../api/todo/todo';\n\nconst Item = (props: IItemProps) => {\n  const { id, text, checkedOnChange = () => undefined } = props;\n  const queryClient = useQueryClient();\n\n  const handleDelete = React.useCallback(\n    () => {\n      checkedOnChange(id, false); // to remove deleted item from selected list;\n\n      queryClient.setQueryData([APIMethod.GET, 'todos'], (old: any) => {\n        const updatedTodos = old?.todos?.filter((t: ITodo) => t.id !== id);\n\n        return {\n          ...old,\n          todos: updatedTodos\n        };\n      });\n\n    },\n    [id, checkedOnChange, queryClient]\n  )\n  return (\n    <CardStyled>\n      <Typography>{text}</Typography>\n      <Actions>\n        <IconButton onClick={handleDelete}>\n          <DeleteSvg />\n        </IconButton>\n        <Checkbox onChange={(e) => checkedOnChange(id, Boolean(e.target.checked))} />\n      </Actions>\n    </CardStyled>\n  );\n};\n\nexport default Item;","const MOBILE = 0\nconst TABLET = 640\nconst DESKTOP = 960\nconst LARGE_SCREEN = 1650\n\ninterface IValues {\n  mobile: number,\n  tablet: number,\n  desktop: number,\n  largeScreen: number,\n}\nconst keys = ['mobile', 'tablet', 'desktop', 'largeScreen']\nconst values: IValues = {\n  mobile: MOBILE,\n  tablet: TABLET,\n  desktop: DESKTOP,\n  largeScreen: LARGE_SCREEN,\n}\n\nconst unit = 'px'\n\ntype ValueKey = keyof IValues;\ntype ValueKeyORNumber = keyof IValues | number;\n\nfunction up(key: ValueKeyORNumber) {\n  const value = typeof values[key as ValueKey] === 'number' ? values[key as ValueKey] : key\n  return `@media (min-width:${value}${unit})`\n}\n\nfunction down(key: ValueKeyORNumber) {\n  const value = typeof values[key as ValueKey] === 'number' ? values[key as ValueKey] : key\n  return `@media (max-width:${value}${unit})`\n}\n\nfunction between(start: ValueKeyORNumber, end: ValueKeyORNumber) {\n\n  return (\n    `@media (min-width:${typeof values[start as ValueKey] === 'number' ? values[start as ValueKey] : start\n    }${unit}) and ` +\n    `(max-width:${typeof values[end as ValueKey] === 'number' ? values[end as ValueKey] : end\n    }${unit})`\n  )\n}\n\nfunction only(key: ValueKey) {\n  if (keys.indexOf(key) + 1 < keys.length) {\n    return between(key, keys[keys.indexOf(key) + 1] as ValueKey)\n  }\n\n  return up(key)\n}\n\nexport const breakpoints = {\n  keys,\n  values,\n  unit,\n  up,\n  down,\n  between,\n  only,\n} ","import { breakpoints } from './breakpoints';\nconst theme = { breakpoints };\n\nexport default theme;","import styled from \"@emotion/styled\";\nimport theme from \"../../theme\";\n\nexport const TodoListContainer = styled.div`\n  margin: 0 auto;\n  width: 100%;\n  text-align: center;\n\n  ${theme.breakpoints.up('desktop')}{\n    width: 50%;\n  }\n`","import { Alert, CircularProgress, Snackbar } from '@mui/material';\nimport React from 'react';\nimport AddTodo from '../../components/AddTodo';\nimport BulkActionRow from '../../components/BulkActionRow';\nimport Item from '../../components/Item';\nimport { useFetchTodo } from '../../api/todo/todo';\nimport { useTodoContextSelector, useTodoDispatch } from './TodoList.context';\nimport { IState } from './TodoList.reducer';\nimport { TodoListContainer } from './TodoList.style';\n\nconst TodoList = () => {\n  const todos = useFetchTodo();\n\n  const todoDispatch = useTodoDispatch();\n  const toastState = useTodoContextSelector<'toast'>((s: IState) => s.toast);\n  const selectedTodos = useTodoContextSelector<'selectedTodos'>((s: IState) => s.selectedTodos);\n\n  const handleToastOnClose = React.useCallback(() => {\n    todoDispatch({ setToast: { open: false } });\n  },\n    [todoDispatch]\n  );\n\n  const handleItemCheckedChange = React.useCallback((itemId: number, checked: boolean) => {\n    const clonedSelectedTodos = [...selectedTodos];\n    if (checked) {\n      clonedSelectedTodos.push(itemId);\n    } else {\n      const selectedItemIndex = clonedSelectedTodos.findIndex((t) => t === itemId);\n      if (selectedItemIndex > -1) {\n        clonedSelectedTodos.splice(selectedItemIndex, 1);\n      }\n    }\n    todoDispatch({ setSelectedTodos: clonedSelectedTodos });\n  }, [selectedTodos, todoDispatch]);\n\n  return (\n    <TodoListContainer>\n      <Snackbar\n        open={toastState?.open}\n        autoHideDuration={2000}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n        onClose={handleToastOnClose} >\n        <Alert severity={toastState?.type} sx={{ width: '100%' }}>\n          {toastState?.message}\n        </Alert>\n      </Snackbar>\n      <AddTodo />\n      <BulkActionRow selectedTodos={selectedTodos} />\n      {todos.isLoading && <CircularProgress />}\n      {todos.data?.todos?.map((t) => <Item\n        key={t.id}\n        id={t.id ?? 0}\n        text={t?.todo ?? ''}\n        checkedOnChange={handleItemCheckedChange} />)}\n    </TodoListContainer>\n  );\n};\n\nexport default TodoList;","import React from 'react';\nimport TodoList from './TodoList';\nimport TodoStateProvider from './TodoList.context';\n\nconst TodoListContainer = () => {\n  return (\n    <TodoStateProvider>\n      <TodoList />\n    </TodoStateProvider>\n  );\n};\n\nexport default TodoListContainer;"],"names":["BASE_API_ENDPOINT","APIRoutes","create","retrieve","update","delete","isNull","value","undefined","Array","isArray","length","Object","keys","APIMethod","appendUrlSearchParams","url","params","urlParams","URLSearchParams","forEach","key","set","concat","toString","api","axios","URL","href","_objectSpread","headers","data","prepareUrl","includes","replace","injectQueryParamsUrl","TodoActionsTypes","useGenericMutation","func","method","queryClient","useQueryClient","useMutation","onSuccess","payload","setQueryData","onError","err","console","error","useCreateTodo","options","then","r","responseParser","POST","useFetchTodo","useQuery","queryKey","GET","queryFn","res","enabled","config","_path","initialState","toast","open","message","type","selectedTodos","createReducer","actionMap","state","actions","_Object$keys$","_Object$keys","handler","updatedState","updatedActions","obj","ret","Set","_step","keysToCopy","filter","has","_iterator","_createForOfIteratorHelper","s","n","done","e","f","omit","_actionMap","_defineProperty","setToast","setSelectedTodos","TodoContext","createContext","TodoDispatchContext","useTodoDispatch","useContext","useTodoContextSelector","selector","useContextSelector","_ref","children","_React$useReducer","React","reducer","_React$useReducer2","_slicedToArray","dispatch","_jsx","Provider","CardStyled","styled","Card","_templateObject","_taggedTemplateLiteral","InputStyled","OutlinedInput","_templateObject2","inputRef","_useState","useState","_useState2","text","setText","createTodo","todoDispatch","handleOnAdd","mutateAsync","todo","userId","current","catch","_jsxs","placeholder","inputProps","onChange","target","Button","color","onClick","_excluded","_extends","assign","bind","i","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgDelete","svgRef","title","titleId","props","xmlns","height","viewBox","width","ref","id","d","ForwardRef","BulkActionRowContainer","RowText","handleBluckDelete","old","_old$todos","updatedTodos","todos","t","some","ct","Number","IconButton","DeleteSvg","Actions","ButtonGroup","_props$checkedOnChang","checkedOnChange","handleDelete","Typography","Checkbox","Boolean","checked","values","mobile","tablet","desktop","largeScreen","unit","up","between","start","end","breakpoints","down","only","TodoListContainer","theme","_todos$data","_todos$data$todos","toastState","handleToastOnClose","handleItemCheckedChange","itemId","clonedSelectedTodos","_toConsumableArray","push","selectedItemIndex","findIndex","splice","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","onClose","Alert","severity","sx","AddTodo","BulkActionRow","isLoading","CircularProgress","map","_t$id","_t$todo","Item","TodoStateProvider","TodoList"],"sourceRoot":""}